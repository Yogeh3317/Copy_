Que.10
Write a python program to implement (hierarchical clustering
Algorithm). (Download
Wholesale customers data dataset from github.com).
(Using External Data set only on R Studio ) Wholesale customers data.csv

--------------------------

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.cluster.hierarchy import dendrogram, linkage, cut_tree
from sklearn.preprocessing import StandardScaler

# Step 1: Load the dataset from the CSV file
dataset = pd.read_csv('Wholesale customers data.csv')

# Step 2: Inspect the data
print("First few rows of the dataset:")
print(dataset.head())
print("\nSummary of the dataset:")
print(dataset.describe())

# Remove any non-numeric columns if they exist (e.g., Customer IDs)
if 'Channel' in dataset.columns:  # Example: remove categorical column
    dataset.drop(columns=['Channel'], inplace=True)

# Check for missing values
print("\nChecking for missing values:")
print(dataset.isnull().sum())

# Optionally, replace missing values with the mean of the column
dataset.fillna(dataset.mean(), inplace=True)

# Normalize the data
scaler = StandardScaler()
dataset_scaled = scaler.fit_transform(dataset)

# Step 3: Compute the distance matrix and perform hierarchical clustering
linked = linkage(dataset_scaled, method='ward')

# Plot the dendrogram
plt.figure(figsize=(10, 7))
dendrogram(linked, orientation='top', labels=dataset.index, distance_sort='descending', show_leaf_counts=True)
plt.title('Hierarchical Clustering Dendrogram')
plt.xlabel('Samples')
plt.ylabel('Distance')
plt.show()

# Step 4: Cut the dendrogram to create clusters
clusters = cut_tree(linked, n_clusters=4).flatten()  # Specify number of clusters
dataset['Cluster'] = clusters

# Inspect the clustering result
print("\nFirst few rows with cluster assignments:")
print(dataset.head())

# Optional: Visualize the clusters using PCA for dimensionality reduction
from sklearn.decomposition import PCA

pca = PCA(n_components=2)
pca_result = pca.fit_transform(dataset_scaled)
dataset_pca = pd.DataFrame(pca_result, columns=['PC1', 'PC2'])
dataset_pca['Cluster'] = dataset['Cluster']

# Plot the PCA results with clusters
plt.figure(figsize=(10, 6))
sns.scatterplot(data=dataset_pca, x='PC1', y='PC2', hue='Cluster', palette='viridis', alpha=0.6)
plt.title('Hierarchical Clustering (PCA-reduced Data)')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.legend(title='Cluster')
plt.show()

# Optional: Save the dataset with cluster labels
dataset.to_csv('Wholesale_customers_with_Clusters.csv', index=False)
